- hosts: elk
  become: true
  vars:
    ansible_python_interpreter: "/usr/bin/env python3"
  
  tasks:
   - name: Create kibana container
     docker_container:
      name: kibana
      image: kibana:7.4.2
      network_mode: "socks"
      ports:
        - "5601:5601"
      recreate: yes
      state: started 
      restart_policy: always

   - name: copy elasticksearch conf 
     copy:
      src: "/var/lib/jenkins/workspace/Build_IS_Terraform/elasticsearch.yml"
      dest: /tmp
      mode: 0644
      owner: 1000
      group: 1000
      force: yes
     become: yes

   - name: Create ElasticSearch container
     docker_container:
      name: elasticsearch
      image: docker.elastic.co/elasticsearch/elasticsearch:7.4.2
      network_mode: "socks"
      ports:
        - "9200:9200"
        - "9300:9300"
      env: 
        ES_JAVA_OPTS: "-Xms750m -Xmx750m"
        bootstrap.memory_lock: "true"
        xpack.security.enabled: "false"
        discovery.type: "single-node"
       # es.enforce.bootstrap.checks: "true"
      ulimits:
        - "nofile:262144:262144"
        - "nproc:65535:65535"
        - "memlock:-1:-1"
      volumes:
        - /tmp/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:Z
      #user:   elasticsearch
      recreate: yes
      state: started       
      restart_policy: always  

   - name: copy nginx.conf to elk-server
     copy:
      src: "/var/lib/jenkins/workspace/Build_IS_Terraform/nginx.conf"
      dest: /tmp
      force: yes
     become: yes
  
   - name: copy htpsswd to elk-server
     copy:
      src: "/tmp/htpasswd.users"
      dest: /tmp
      force: yes
     become: yes  
  
    
   - name: Create nginx container
     docker_container:
      name: nginx
      image: nginx
      network_mode: "socks"
      volumes:
        - /tmp/.htpasswd.elk:/etc/nginx/htpasswd.elk
        - /tmp/nginx.conf:/etc/nginx/nginx.conf
      ports: 
        - "80:80"  
      recreate: yes
      state: started
      restart_policy: always
      
   - name: copy filebeat conf to db-tf
     copy:
      src: "/var/lib/jenkins/workspace/Build_IS_Terraform/filebeat.yml"
      dest: /tmp
      force: yes
     become: yes

   - name: Create filebeat container
     docker_container:
      name: filebeat
      image: docker.io/elastic/filebeat:7.4.2
      network_mode: "socks"
      command: ["sh","-c","filebeat -e -strict.perms=false"]
      volumes:
       - /tmp/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
       - /var/lib/docker/containers:/var/lib/docker/containers:ro
       - /var/run/docker.sock:/var/run/docker.sock:ro
       - /var/log:/var/log:ro
      env: 
       output.elasticsearch.hosts: "elk-server:9200"
      user: root
      recreate: yes
      state: started
      restart_policy: always
     become: yes
