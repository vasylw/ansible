#Перед виконанням даної команди потрібно щоб на віддаленій машині був публічни ключ у файлі ~/.ssh/authorized_keys
#а приватний ключ на поточній машині у файлі ~/.ssh/id_rsa (файл з цим іменем використовується за промовчанням клієнтом ssh) або в іншому файлі, (але тоді в команді потрібно вказати його імя)
# Також потрібно змінити доступи на файл $ chmod 400 ~/.ssh/id_rsa
- hosts: all
  become: true
  vars:
    ansible_python_interpreter: "/usr/bin/env python3"

  tasks:
  - name: "APT - Add Docker GPG key"
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present

  - name: "APT - Add Docker repository"
    apt_repository:
      repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu bionic stable"
      state: present
      filename: docker

  - name: "APT - install misc packages"
    apt:
      name: "{{ item }}"
      update_cache: yes
    with_items:
      - "aptitude"
      - "apt-transport-https"
      - "ca-certificates"
      - "curl"
      - "software-properties-common"

  - name: "APT - install 'docker-ce'"
    apt:
      name: "docker-ce"
      update_cache: yes
      
  - hosts: database_server
  become: true
  vars:
    ansible_python_interpreter: "/usr/bin/env python3"

  tasks:
  # tasks file for catalogue-run


  
- name: Create a network
  docker_network:
    name: socks
  become: yes


- name: Create and run carts-db container
  docker_container:
    name: carts-db
    image: "mongo:latest"
    ports:
     - "27017:27017"
    restart_policy: always
    user: root
  become: yes
  become_user: root
  become_method: sudo

- name: Run catalogue-db container
  docker_container:
    name: catalogue-db
    image: "vasylw/catalogue-db:latest"
    ports:
      - "3306:3306"
    restart_policy: always
    pull: yes
    user: root
  become: yes
  
  - name: Run carts container
  docker_container:
    name: carts
    image: "vasylw/appcarts:latest"
    ports:
      - "8081:80"
    restart_policy: always
    networks:
      - name: socks
    env:
      DB_NETWORK_IP: "{{ cat /var/lib/jenkins/workspace/Build_IS_Terraform/private_ip_database.txt }}"
    pull: yes
    recreate: yes
    state: started 
    user: root
  become: yes

- name: Run catalogue container
  docker_container:
    name: catalogue
    image: "vasylw/catalogue:latest"
    ports:
      - "8080:80"
    restart_policy: always
    networks:
      - name: socks
    etc_hosts:
        catalogue-db: "{{ cat /var/lib/jenkins/workspace/Build_IS_Terraform/private_ip_database.txt }}"
    pull: yes
    recreate: yes
    state: started 
    user: root
  become: yes
  
  - name: Run front-end container
  docker_container:
    name: front_end
    image: "vasylw/front-end:latest"
    ports:
      - "80:8079"
    restart_policy: always
    networks: 
      - name: socks
    pull: yes
    recreate: yes
    state: started 
    user: root
  become: yes

